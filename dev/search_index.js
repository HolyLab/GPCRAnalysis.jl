var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GPCRAnalysis","category":"page"},{"location":"#GPCRAnalysis","page":"Home","title":"GPCRAnalysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GPCRAnalysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GPCRAnalysis]","category":"page"},{"location":"#GPCRAnalysis.align-Tuple{AbstractMatrix{Float64}, AbstractVector{MIToS.PDB.PDBResidue}, SequenceMapping}","page":"Home","title":"GPCRAnalysis.align","text":"align(fixedpos::AbstractMatrix{Float64}, moving::AbstractVector{PDBResidue}, sm::SequenceMapping)\nalign(fixed::AbstractVector{PDBResidue}, moving::AbstractVector{PDBResidue}, sm::SequenceMapping)\n\nReturn a rotated and shifted version of moving so that the α-carbons of residues moving[sm] have least mean square error deviation from positions fixedpos or those of residues fixed.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.chargelocations-Tuple{AbstractVector{MIToS.PDB.PDBResidue}}","page":"Home","title":"GPCRAnalysis.chargelocations","text":"chargelocations(pdb::AbstractVector{PDBResidue}; include_his::Bool=false)\n\nReturn a list of potential charge locations in the protein structure. Each is a tuple (position, residueindex, AAname). The positions are those of N (in positively-charged residues like Arg & Lys) or O (in negatively-charged residues like Asp and Glu). N- and C-termini are not included in the list. While each residue will carry a net total charge of ±1, the location of each potential charge will be listed (1 for Lys, 2 each for Arg, Asp, and Glu).\n\nBy default, histidine is not considered charged, but you can include it by setting include_His=true.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.columnwise_entropy","page":"Home","title":"GPCRAnalysis.columnwise_entropy","text":"columnwise_entropy(msa::AbstractMultipleSequenceAlignment, aacode = ReducedAlphabet(\"(AILMV)(NQST)(RHK)(DE)(FWY)CGP\")\n\nCompute the entropy of each column in an MSA. Low entropy indicates high conservation.\n\nUnmatched entries ('-' residues) contribute to the entropy calculation as if they were an ordinary residue.\n\n\n\n\n\n","category":"function"},{"location":"#GPCRAnalysis.download_alphafolds-Tuple{MIToS.MSA.AbstractMultipleSequenceAlignment}","page":"Home","title":"GPCRAnalysis.download_alphafolds","text":"download_alphafolds(msa::AbstractMultipleSequenceAlignment; dirname=pwd())\n\nDownload all available AlphaFold structures for the sequences in msa. Missing entries are silently skipped.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.filter_long!-Tuple{MIToS.MSA.AbstractMultipleSequenceAlignment, Real}","page":"Home","title":"GPCRAnalysis.filter_long!","text":"filter_long!(msa::AbstractMultipleSequenceAlignment, minres::Real)\n\nRemove all sequences from msa with fewer than minres matching residues.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.filter_species!-Tuple{MIToS.MSA.AbstractMultipleSequenceAlignment, AbstractString}","page":"Home","title":"GPCRAnalysis.filter_species!","text":"filter_species!(msa::AbstractMultipleSequenceAlignment, speciesname::AbstractString)\n\nRemove all sequences from msa except those with species(sequencename) equal to speciesname.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.getchain-Tuple{AbstractString}","page":"Home","title":"GPCRAnalysis.getchain","text":"getchain(filename::AbstractString; model=\"1\", chain=\"A\")\n\nRead a PDB file filename and extract the specified chain.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.project_sequences-Tuple{MIToS.MSA.AbstractMultipleSequenceAlignment}","page":"Home","title":"GPCRAnalysis.project_sequences","text":"X = project_sequences(msa::AbstractMultipleSequenceAlignment; fracvar::Real = 0.9)\n\nPerform a classical multidimensional scaling analysis to project the sequences in msa to a space in which pairwise distances approximately reproduce 100 - percentsimilarity(seq1, seq2). The dimensionality is chosen to reconstruction fracvar of the variance.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.sortperm_msa-Tuple{MIToS.MSA.AbstractMultipleSequenceAlignment}","page":"Home","title":"GPCRAnalysis.sortperm_msa","text":"tour = sortperm_msa(msa::AbstractMultipleSequenceAlignment)\n\nOrder the sequences in msa to minimize the \"tour length\" visiting each sequence once. The length between sequences is defined at 100 - percentsimilarity(seq1, seq2).\n\nThis can be useful for graphical or alignment display by grouping obviously-similar sequences near one another.\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.species-Tuple{AbstractString}","page":"Home","title":"GPCRAnalysis.species","text":"species(name)\n\nExtract the species identifier from a UniProt \"X_Y\" entry or elaborated variant (e.g., PFAM sequence name).\n\nSee also uniprotX.\n\nExamples\n\njulia> species(\"Q8VGW6_MOUSE/31-308\")\n\"MOUSE\"\n\n\n\n\n\n","category":"method"},{"location":"#GPCRAnalysis.try_download_alphafold","page":"Home","title":"GPCRAnalysis.try_download_alphafold","text":"try_download_alphafold(uniprotXname, path=alphafoldfile(uniprotXname))\n\nAttempt to download an AlphaFold structure. Returns nothing if no entry corresponding to uniprotXname exists; otherwise it return path, the pathname of the saved file.\n\n\n\n\n\n","category":"function"},{"location":"#GPCRAnalysis.uniprotX-Tuple{AbstractString}","page":"Home","title":"GPCRAnalysis.uniprotX","text":"uniprotX(name)\n\nExtract the UniProt \"X\" entry from an X_Y entry or elaborated variant (e.g., PFAM sequence name).\n\nSee also species.\n\nExamples\n\njulia> uniprotX(\"Q8VGW6_MOUSE/31-308\")\n\"Q8VGW6\"\n\n\n\n\n\n","category":"method"}]
}
